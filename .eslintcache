[{"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\index.js":"1","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\App.js":"2","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\reportWebVitals.js":"3","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Drawer.js":"4","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\pages\\Homepage.js":"5","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\pages\\Notifications.js":"6","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\NotificationTable.js":"7","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Card.js":"8","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Grid.js":"9","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\LinGraph.js":"10","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\sampleData.js":"11","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\MapTest.js":"12","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Notification.js":"13","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\pages\\Notification.js":"14","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Loader.js":"15","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Kpi1.js":"16","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Kpi2.js":"17","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\FilteredTable.js":"18"},{"size":533,"mtime":1610991385167,"results":"19","hashOfConfig":"20"},{"size":335,"mtime":1610907841794,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":4117,"mtime":1611005127785,"results":"23","hashOfConfig":"20"},{"size":371,"mtime":1610990480778,"results":"24","hashOfConfig":"20"},{"size":373,"mtime":1611006332792,"results":"25","hashOfConfig":"20"},{"size":1290,"mtime":1610909467433,"results":"26","hashOfConfig":"20"},{"size":2206,"mtime":1610989921362,"results":"27","hashOfConfig":"20"},{"size":1381,"mtime":1611006395502,"results":"28","hashOfConfig":"20"},{"size":2462,"mtime":1611004865160,"results":"29","hashOfConfig":"20"},{"size":408,"mtime":1611003431780,"results":"30","hashOfConfig":"20"},{"size":699,"mtime":1610836491835,"results":"31","hashOfConfig":"20"},{"size":719,"mtime":1610890875197,"results":"32","hashOfConfig":"20"},{"size":283,"mtime":1610908838107,"results":"33","hashOfConfig":"20"},{"size":1882,"mtime":1610909413995,"results":"34","hashOfConfig":"20"},{"size":2249,"mtime":1611005546079,"results":"35","hashOfConfig":"20"},{"size":2138,"mtime":1611005663367,"results":"36","hashOfConfig":"20"},{"size":2365,"mtime":1611010476379,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"13qsn3t",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\index.js",[],["80","81"],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\App.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Drawer.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\pages\\Homepage.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\pages\\Notifications.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\NotificationTable.js",["82","83"],"import React from 'react';\r\nimport 'App.css';\r\nimport { render } from 'react-dom';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  useQuery,\r\n  gql\r\n} from \"@apollo/client\";\r\nimport {Link} from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom' ;\r\nimport SkeletonChildren from 'components/Loader';\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://react-recruitment.musbenlahrech.repl.co/\",\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nfunction NotificationQuery() {\r\n  const { loading, error, data } = useQuery(gql`\r\n    {\r\n      notifications {\r\n  id\r\n  type\r\n}\r\n    }\r\n  `);\r\n\r\n  if (loading) return <SkeletonChildren />;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return data.notifications.map(({ id, type }) => (\r\n    <Router><div key={id}>\r\n      <Link style={{color: 'white'}} to={`/notifications/${id}`}>\r\n      <p>\r\n        {id}: {type}\r\n      </p>\r\n      </Link>\r\n    </div>\r\n    </Router>\r\n  ));\r\n}\r\n\r\n\r\n\r\nfunction NotificationTable() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div>\r\n        <h2>Apollo Query Test</h2>\r\n        <NotificationQuery />\r\n      </div>\r\n    </ApolloProvider>\r\n  ); \r\n}\r\n\r\nrender(<NotificationTable />, document.getElementById('root'));\r\n\r\n\r\nexport default NotificationTable;","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Card.js",["84","85","86"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    backgroundColor: '#061218',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    color: 'white'\r\n  },\r\n  cover: {\r\n    width: 110,\r\n    height: 110,\r\n    borderRadius: '50%',\r\n    margin: '30px'\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n    align: 'center',\r\n    color: 'white'\r\n  },\r\n  name: {\r\n    fontWeight: 'bold',\r\n  }\r\n}));\r\n\r\nexport default function MediaControlCard() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography noWrap component='subtitle1' variant='subtitle1'>\r\n            Account Details\r\n          </Typography>\r\n          <Typography className={classes.name} component='h5' variant='h5'>\r\n            Akram Soltani\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"white\">\r\n            Customer: @address\r\n          </Typography>\r\n          <IconButton aria-label=\"Email\">\r\n            <MailIcon className={classes.playIcon} />\r\n          </IconButton>\r\n        </CardContent>\r\n      </div>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        image=\"https://res.cloudinary.com/aw0696/image/upload/v1610752617/IMG_20210108_121041_-_Copie.jpg\"\r\n        title=\"Live from space album cover\"\r\n      />\r\n      \r\n\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Grid.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\LinGraph.js",["87","88","89"],"import React from 'react';\r\nimport { VictoryChart, VictoryArea, VictoryAxis, VictoryTheme, VictoryLegend, VictoryLine } from 'victory';\r\n\r\nconst RandomTitle = () => (\"This is a title\")\r\nconst RandomData = () => (\"3000\")\r\n\r\nfunction LinGraph(props) {\r\n    \r\n    return (\r\n        <div>\r\n        <VictoryChart \r\n        minDomain={{ y: 0 }}\r\n        //width={320}\r\n        height={180}\r\n        theme={VictoryTheme.material}\r\n        style={{\r\n          background: {\r\n            fill: \"#061218\"\r\n          },\r\n        }}>\r\n            \r\n            <VictoryLine style={{data: { stroke: \"#1ECC82\" }}} \r\n            data={props.customData}/>\r\n            <VictoryAxis\r\n            style={{\r\n              grid: {\r\n                strokeWidth: 0\r\n                },\r\n                axis: {stroke: \"transparent\"}, \r\n            ticks: {stroke: \"transparent\"},\r\n            tickLabels: { fill:\"transparent\"}\r\n            }}/>  \r\n            <VictoryAxis\r\n            style={{\r\n                grid: {\r\n                  strokeWidth: 0\r\n                  },\r\n                  axis: {stroke: \"transparent\"}, \r\n              ticks: {stroke: \"transparent\"},\r\n              tickLabels: { fill:\"transparent\"}\r\n            }} \r\n            />\r\n        </VictoryChart>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  function AreaGraph(props) {\r\n    \r\n    return (\r\n        <div>\r\n        <VictoryChart \r\n        minDomain={{ y: 0 }}\r\n        //width={320}\r\n        height={180}\r\n        theme={VictoryTheme.material}\r\n        style={{\r\n          background: {\r\n            fill: \"#061218\"\r\n          },\r\n        }}>\r\n            \r\n            <VictoryArea style={{\r\n            data: {\r\n            fill: '#0A2634',\r\n            stroke: \"#C8A007\" },\r\n            }} \r\n            data={props.customData}/>\r\n            <VictoryAxis\r\n            style={{\r\n              grid: {\r\n                strokeWidth: 0\r\n                },\r\n                axis: {stroke: \"transparent\"}, \r\n            ticks: {stroke: \"transparent\"},\r\n            tickLabels: { fill:\"transparent\"}\r\n            }}/>  \r\n            <VictoryAxis\r\n            style={{\r\n                grid: {\r\n                  strokeWidth: 0\r\n                  },\r\n                  axis: {stroke: \"transparent\"}, \r\n              ticks: {stroke: \"transparent\"},\r\n              tickLabels: { fill:\"transparent\"}\r\n            }} \r\n            />\r\n        </VictoryChart>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export {LinGraph, AreaGraph}","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\sampleData.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\MapTest.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Notification.js",["90","91","92","93","94","95"],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\pages\\Notification.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Loader.js",[],"C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Kpi1.js",["96","97","98","99","100","101","102","103"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport {LinGraph} from './LinGraph';\r\nimport {bob, bob2, bob3} from 'sampleData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'left',\r\n    backgroundColor: '#061218',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  details2: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  content: {\r\n    marginBottom: '-10px',\r\n    marginTop: '-10px',\r\n    color: 'white',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n    height: 151,\r\n    borderRadius: '50%',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n    align: 'center'\r\n  },\r\n  name: {\r\n    fontWeight: 'bold',\r\n    alignItems: 'left'\r\n  }\r\n}));\r\n\r\n//Testing Data\r\nconst TestAverage = \"39/100\";\r\nconst TestChange = \"3% per 1 year\";\r\n\r\nexport default function KpiLine() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div>\r\n        <CardContent className={classes.content}>\r\n          <Typography noWrap component='subtitle1' variant='subtitle1'>\r\n            Pavement Condition Index (PCI)\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n      \r\n      <div className={classes.details2}>\r\n        <CardContent className={classes.content}>\r\n          <Typography noWrap style={{fontWeight: 'bold', fontSize: '33px', paddingRight: '28px'}}>\r\n            {TestAverage}\r\n          </Typography>\r\n          <Typography noWrap variant=\"subtitle1\" color='white'>\r\n            {TestChange}\r\n          </Typography>\r\n        </CardContent>\r\n        <LinGraph customData={bob}/>\r\n      </div>    \r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\Kpi2.js",["104","105","106","107","108","109","110","111"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport {AreaGraph} from './LinGraph';\r\nimport {bob, bob2, bob3} from 'sampleData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#061218',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  content: {\r\n    marginBottom: '-10px',\r\n    marginTop: '-10px',\r\n    color: 'white',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n    height: 151,\r\n    borderRadius: '50%',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n    align: 'center'\r\n  },\r\n  name: {\r\n    fontWeight: 'bold',\r\n    alignItems: 'left'\r\n  }\r\n}));\r\n\r\n//Testing Data\r\nconst TestAverage = \"3.7 years\";\r\nconst TestChange = \"8% of service life\";\r\n\r\nexport default function KpiArea() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div>\r\n        <CardContent className={classes.content}>\r\n          <Typography noWrap component='subtitle1' variant='subtitle1'>\r\n            Predicted Lifecycle w/o intervention\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n      \r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography noWrap style={{fontWeight: 'bold', fontSize: '33px'}}>\r\n            {TestAverage}\r\n          </Typography>\r\n          <Typography  variant=\"subtitle1\" color='white'>\r\n            {TestChange}\r\n          </Typography>\r\n        </CardContent>\r\n        <AreaGraph customData={bob}/>\r\n      </div>    \r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Akram\\Documents\\GitHub\\react-dashboard\\src\\components\\FilteredTable.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":12,"column":35,"nodeType":"118","messageId":"119","endLine":12,"endColumn":41},{"ruleId":"116","severity":1,"message":"120","line":12,"column":43,"nodeType":"118","messageId":"119","endLine":12,"endColumn":48},{"ruleId":"116","severity":1,"message":"121","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":24},{"ruleId":"116","severity":1,"message":"122","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":21},{"ruleId":"116","severity":1,"message":"123","line":50,"column":9,"nodeType":"118","messageId":"119","endLine":50,"endColumn":14},{"ruleId":"116","severity":1,"message":"124","line":2,"column":64,"nodeType":"118","messageId":"119","endLine":2,"endColumn":77},{"ruleId":"116","severity":1,"message":"125","line":4,"column":7,"nodeType":"118","messageId":"119","endLine":4,"endColumn":18},{"ruleId":"116","severity":1,"message":"126","line":5,"column":7,"nodeType":"118","messageId":"119","endLine":5,"endColumn":17},{"ruleId":"116","severity":1,"message":"127","line":8,"column":3,"nodeType":"118","messageId":"119","endLine":8,"endColumn":11},{"ruleId":"116","severity":1,"message":"128","line":9,"column":3,"nodeType":"118","messageId":"119","endLine":9,"endColumn":6},{"ruleId":"116","severity":1,"message":"129","line":11,"column":9,"nodeType":"118","messageId":"119","endLine":11,"endColumn":13},{"ruleId":"116","severity":1,"message":"130","line":12,"column":27,"nodeType":"118","messageId":"119","endLine":12,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":12,"column":35,"nodeType":"118","messageId":"119","endLine":12,"endColumn":41},{"ruleId":"116","severity":1,"message":"120","line":12,"column":43,"nodeType":"118","messageId":"119","endLine":12,"endColumn":48},{"ruleId":"116","severity":1,"message":"131","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":17},{"ruleId":"116","severity":1,"message":"132","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":18},{"ruleId":"116","severity":1,"message":"121","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":24},{"ruleId":"116","severity":1,"message":"122","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":21},{"ruleId":"116","severity":1,"message":"133","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":16},{"ruleId":"116","severity":1,"message":"134","line":13,"column":14,"nodeType":"118","messageId":"119","endLine":13,"endColumn":18},{"ruleId":"116","severity":1,"message":"135","line":13,"column":20,"nodeType":"118","messageId":"119","endLine":13,"endColumn":24},{"ruleId":"116","severity":1,"message":"123","line":60,"column":9,"nodeType":"118","messageId":"119","endLine":60,"endColumn":14},{"ruleId":"116","severity":1,"message":"131","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":17},{"ruleId":"116","severity":1,"message":"132","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":18},{"ruleId":"116","severity":1,"message":"121","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":24},{"ruleId":"116","severity":1,"message":"122","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":21},{"ruleId":"116","severity":1,"message":"133","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":16},{"ruleId":"116","severity":1,"message":"134","line":13,"column":14,"nodeType":"118","messageId":"119","endLine":13,"endColumn":18},{"ruleId":"116","severity":1,"message":"135","line":13,"column":20,"nodeType":"118","messageId":"119","endLine":13,"endColumn":24},{"ruleId":"116","severity":1,"message":"123","line":55,"column":9,"nodeType":"118","messageId":"119","endLine":55,"endColumn":14},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'theme' is assigned a value but never used.","'VictoryLegend' is defined but never used.","'RandomTitle' is assigned a value but never used.","'RandomData' is assigned a value but never used.","'useQuery' is defined but never used.","'gql' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'CardMedia' is defined but never used.","'IconButton' is defined but never used.","'MailIcon' is defined but never used.","'bob2' is defined but never used.","'bob3' is defined but never used.","no-global-assign","no-unsafe-negation"]